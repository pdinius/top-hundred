import Head from "next/head";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.scss";
import { useState } from "react";
import { GameData } from "@/types/game-types";
import { GamePreview } from "@/components/GamePreview/GamePreview";
// import { useRouter } from "next/router";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [games, setGames] = useState("");
  const [gamedata, setGamedata] = useState<Array<GameData>>([]);
  // const router = useRouter();
  // router.push("other-page");

  const fetchGames = () => {
    fetch(`/api/fetch-games?games=${games.trim().replace(/\n/g, ",")}`).then(
      (res) => {
        res.json().then((json) => {
          if (json.message === "A") {
            setGamedata(json.data);
          }
        });
      }
    );
  };

  const updateInput =
    (idx: number) => (e: React.ChangeEvent<HTMLInputElement>) => {
      if (e.target.value.match(/\D/)) return;
      setGamedata((curr) => {
        const copy = curr.slice();
        copy[idx].id = e.target.value;
        return copy;
      });
    };

  const updateGameData =
    (idx: number) => (e: React.KeyboardEvent<HTMLInputElement>) => {
      if (e.key === "Enter") {
        fetch(`/api/update-preview?id=${gamedata[idx].id}`).then((res) => {
          res.json().then((json) => {
            setGamedata((curr) => {
              const copy = curr.slice();
              copy[idx] = json.data;
              return copy;
            });
          });
        });
      }
    };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.landing}>
        <section className={styles.left}>
          <textarea
            className={styles.gameNames}
            value={games}
            onChange={(e) => setGames(e.target.value)}
          ></textarea>
          <button onClick={fetchGames}>go</button>
        </section>
        <section className={styles.right}>
          {gamedata.map((g, i) => (
            <GamePreview
              key={i}
              {...g}
              updateInput={updateInput(i)}
              updateGameData={updateGameData(i)}
            />
          ))}
        </section>
      </main>
    </>
  );
}
